/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.parser;

import prolixa.lexer.*;
import prolixa.node.*;
import prolixa.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprogramaprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAprogramaprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AAprogramaprograma3Programa */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list, false);
            }
            break;
            case 3: /* reduce AAprogramaprograma4Programa */
            {
                ArrayList<Object> list = new3();
                push(goTo(0), list, false);
            }
            break;
            case 4: /* reduce AAdeclaracoesheaddeclaracoes1Declaracoes */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list, false);
            }
            break;
            case 5: /* reduce AAdeclaracoesheaddeclaracoes2Declaracoes */
            {
                ArrayList<Object> list = new5();
                push(goTo(1), list, false);
            }
            break;
            case 6: /* reduce AComandosHeadComandos */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list, false);
            }
            break;
            case 7: /* reduce ADeclaracaoMutDeclaracao */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list, false);
            }
            break;
            case 8: /* reduce ADeclaracaoUnaltDeclaracao */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce ADeclaracaoUnaltInitDeclaracao */
            {
                ArrayList<Object> list = new9();
                push(goTo(3), list, false);
            }
            break;
            case 10: /* reduce ADeclaracaoVecDeclaracao */
            {
                ArrayList<Object> list = new10();
                push(goTo(3), list, false);
            }
            break;
            case 11: /* reduce ATamanhosMatrizTamanhos */
            {
                ArrayList<Object> list = new11();
                push(goTo(4), list, false);
            }
            break;
            case 12: /* reduce ATamanhosUnitTamanhos */
            {
                ArrayList<Object> list = new12();
                push(goTo(4), list, false);
            }
            break;
            case 13: /* reduce ATipoNumberTipo */
            {
                ArrayList<Object> list = new13();
                push(goTo(5), list, false);
            }
            break;
            case 14: /* reduce ATipoAnswerTipo */
            {
                ArrayList<Object> list = new14();
                push(goTo(5), list, false);
            }
            break;
            case 15: /* reduce ATipoSymbolTipo */
            {
                ArrayList<Object> list = new15();
                push(goTo(5), list, false);
            }
            break;
            case 16: /* reduce AVarIdVar */
            {
                ArrayList<Object> list = new16();
                push(goTo(6), list, false);
            }
            break;
            case 17: /* reduce AVarCallVar */
            {
                ArrayList<Object> list = new17();
                push(goTo(6), list, false);
            }
            break;
            case 18: /* reduce ALargHeadListaArgRparen */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list, false);
            }
            break;
            case 19: /* reduce AListaArgPrimeiroListaArg */
            {
                ArrayList<Object> list = new19();
                push(goTo(8), list, false);
            }
            break;
            case 20: /* reduce AListaArgContListaArgTail */
            {
                ArrayList<Object> list = new20();
                push(goTo(9), list, false);
            }
            break;
            case 21: /* reduce AListaArgFimListaArgTail */
            {
                ArrayList<Object> list = new21();
                push(goTo(9), list, false);
            }
            break;
            case 22: /* reduce AUnaltIdUnalt */
            {
                ArrayList<Object> list = new22();
                push(goTo(10), list, false);
            }
            break;
            case 23: /* reduce AValorSymbValor */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce AValorBoolValor */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list, false);
            }
            break;
            case 25: /* reduce AValorNumValor */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list, false);
            }
            break;
            case 26: /* reduce AValorStrValor */
            {
                ArrayList<Object> list = new26();
                push(goTo(11), list, false);
            }
            break;
            case 27: /* reduce ACmdCndComando */
            {
                ArrayList<Object> list = new27();
                push(goTo(12), list, false);
            }
            break;
            case 28: /* reduce ACmdSoltComando */
            {
                ArrayList<Object> list = new28();
                push(goTo(12), list, false);
            }
            break;
            case 29: /* reduce AAtrComandoCasado */
            {
                ArrayList<Object> list = new29();
                push(goTo(13), list, false);
            }
            break;
            case 30: /* reduce AInitComandoCasado */
            {
                ArrayList<Object> list = new30();
                push(goTo(13), list, false);
            }
            break;
            case 31: /* reduce AIfCasaComandoCasado */
            {
                ArrayList<Object> list = new31();
                push(goTo(13), list, false);
            }
            break;
            case 32: /* reduce ACapComandoCasado */
            {
                ArrayList<Object> list = new32();
                push(goTo(13), list, false);
            }
            break;
            case 33: /* reduce AShowComandoCasado */
            {
                ArrayList<Object> list = new33();
                push(goTo(13), list, false);
            }
            break;
            case 34: /* reduce AWhileComandoCasado */
            {
                ArrayList<Object> list = new34();
                push(goTo(13), list, false);
            }
            break;
            case 35: /* reduce AForComandoCasado */
            {
                ArrayList<Object> list = new35();
                push(goTo(13), list, false);
            }
            break;
            case 36: /* reduce ABreakComandoCasado */
            {
                ArrayList<Object> list = new36();
                push(goTo(13), list, false);
            }
            break;
            case 37: /* reduce AContComandoCasado */
            {
                ArrayList<Object> list = new37();
                push(goTo(13), list, false);
            }
            break;
            case 38: /* reduce ACmdBlkComandoCasado */
            {
                ArrayList<Object> list = new38();
                push(goTo(13), list, false);
            }
            break;
            case 39: /* reduce AIfSCmComandoSolteiro */
            {
                ArrayList<Object> list = new39();
                push(goTo(14), list, false);
            }
            break;
            case 40: /* reduce AIfSMixComandoSolteiro */
            {
                ArrayList<Object> list = new40();
                push(goTo(14), list, false);
            }
            break;
            case 41: /* reduce AWhileStmtKwWhileStmt */
            {
                ArrayList<Object> list = new41();
                push(goTo(15), list, false);
            }
            break;
            case 42: /* reduce AForStmtKwForStmt */
            {
                ArrayList<Object> list = new42();
                push(goTo(16), list, false);
            }
            break;
            case 43: /* reduce AListaVarPrimeiraListaVar */
            {
                ArrayList<Object> list = new43();
                push(goTo(17), list, false);
            }
            break;
            case 44: /* reduce AListaVarContListaVarTail */
            {
                ArrayList<Object> list = new44();
                push(goTo(18), list, false);
            }
            break;
            case 45: /* reduce AListaVarFimListaVarTail */
            {
                ArrayList<Object> list = new45();
                push(goTo(18), list, false);
            }
            break;
            case 46: /* reduce ALexpHeadListaExpRparen */
            {
                ArrayList<Object> list = new46();
                push(goTo(19), list, false);
            }
            break;
            case 47: /* reduce AAblocodecbloco1Bloco */
            {
                ArrayList<Object> list = new47();
                push(goTo(20), list, false);
            }
            break;
            case 48: /* reduce AAblocodecbloco2Bloco */
            {
                ArrayList<Object> list = new48();
                push(goTo(20), list, false);
            }
            break;
            case 49: /* reduce AAblococmdbloco1Bloco */
            {
                ArrayList<Object> list = new49();
                push(goTo(20), list, false);
            }
            break;
            case 50: /* reduce AAblococmdbloco2Bloco */
            {
                ArrayList<Object> list = new50();
                push(goTo(20), list, false);
            }
            break;
            case 51: /* reduce AExp */
            {
                ArrayList<Object> list = new51();
                push(goTo(21), list, false);
            }
            break;
            case 52: /* reduce AOrNormOrExp */
            {
                ArrayList<Object> list = new52();
                push(goTo(22), list, false);
            }
            break;
            case 53: /* reduce AOrRparOrExpRparen */
            {
                ArrayList<Object> list = new53();
                push(goTo(23), list, false);
            }
            break;
            case 54: /* reduce AOrMoreOrTail */
            {
                ArrayList<Object> list = new54();
                push(goTo(24), list, false);
            }
            break;
            case 55: /* reduce AXorMoreOrTail */
            {
                ArrayList<Object> list = new55();
                push(goTo(24), list, false);
            }
            break;
            case 56: /* reduce AOrEndOrTail */
            {
                ArrayList<Object> list = new56();
                push(goTo(24), list, false);
            }
            break;
            case 57: /* reduce AOrRMoreOrTailRparen */
            {
                ArrayList<Object> list = new57();
                push(goTo(25), list, false);
            }
            break;
            case 58: /* reduce AXorRMoreOrTailRparen */
            {
                ArrayList<Object> list = new58();
                push(goTo(25), list, false);
            }
            break;
            case 59: /* reduce AOrRParOrTailRparen */
            {
                ArrayList<Object> list = new59();
                push(goTo(25), list, false);
            }
            break;
            case 60: /* reduce AOrRComOrTailRparen */
            {
                ArrayList<Object> list = new60();
                push(goTo(25), list, false);
            }
            break;
            case 61: /* reduce AAndTermAndExp */
            {
                ArrayList<Object> list = new61();
                push(goTo(26), list, false);
            }
            break;
            case 62: /* reduce AAndMoreAndExp */
            {
                ArrayList<Object> list = new62();
                push(goTo(26), list, false);
            }
            break;
            case 63: /* reduce AAndExpRTermAndExpRparen */
            {
                ArrayList<Object> list = new63();
                push(goTo(27), list, false);
            }
            break;
            case 64: /* reduce AAndExpRMoreAndExpRparen */
            {
                ArrayList<Object> list = new64();
                push(goTo(27), list, false);
            }
            break;
            case 65: /* reduce AAndRMoreAndTailRparen */
            {
                ArrayList<Object> list = new65();
                push(goTo(28), list, false);
            }
            break;
            case 66: /* reduce AAndRParAndTailRparen */
            {
                ArrayList<Object> list = new66();
                push(goTo(28), list, false);
            }
            break;
            case 67: /* reduce AAndRComAndTailRparen */
            {
                ArrayList<Object> list = new67();
                push(goTo(28), list, false);
            }
            break;
            case 68: /* reduce ARelHeadRelExp */
            {
                ArrayList<Object> list = new68();
                push(goTo(29), list, false);
            }
            break;
            case 69: /* reduce ARelGtRelTail */
            {
                ArrayList<Object> list = new69();
                push(goTo(30), list, false);
            }
            break;
            case 70: /* reduce ARelLtRelTail */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list, false);
            }
            break;
            case 71: /* reduce ARelGeRelTail */
            {
                ArrayList<Object> list = new71();
                push(goTo(30), list, false);
            }
            break;
            case 72: /* reduce ARelLeRelTail */
            {
                ArrayList<Object> list = new72();
                push(goTo(30), list, false);
            }
            break;
            case 73: /* reduce ARelEqRelTail */
            {
                ArrayList<Object> list = new73();
                push(goTo(30), list, false);
            }
            break;
            case 74: /* reduce ARelNeRelTail */
            {
                ArrayList<Object> list = new74();
                push(goTo(30), list, false);
            }
            break;
            case 75: /* reduce ARelEndRelTail */
            {
                ArrayList<Object> list = new75();
                push(goTo(30), list, false);
            }
            break;
            case 76: /* reduce AAddTermAddExp */
            {
                ArrayList<Object> list = new76();
                push(goTo(31), list, false);
            }
            break;
            case 77: /* reduce AAddPlusAddExp */
            {
                ArrayList<Object> list = new77();
                push(goTo(31), list, false);
            }
            break;
            case 78: /* reduce AAddMinusAddExp */
            {
                ArrayList<Object> list = new78();
                push(goTo(31), list, false);
            }
            break;
            case 79: /* reduce AMulExpTermMulExp */
            {
                ArrayList<Object> list = new79();
                push(goTo(32), list, false);
            }
            break;
            case 80: /* reduce AMulExpTimesMulExp */
            {
                ArrayList<Object> list = new80();
                push(goTo(32), list, false);
            }
            break;
            case 81: /* reduce AMulExpDivMulExp */
            {
                ArrayList<Object> list = new81();
                push(goTo(32), list, false);
            }
            break;
            case 82: /* reduce AMulExpModMulExp */
            {
                ArrayList<Object> list = new82();
                push(goTo(32), list, false);
            }
            break;
            case 83: /* reduce AMulTimesMulTail */
            {
                ArrayList<Object> list = new83();
                push(goTo(33), list, false);
            }
            break;
            case 84: /* reduce AMulDivMulTail */
            {
                ArrayList<Object> list = new84();
                push(goTo(33), list, false);
            }
            break;
            case 85: /* reduce AMulModMulTail */
            {
                ArrayList<Object> list = new85();
                push(goTo(33), list, false);
            }
            break;
            case 86: /* reduce AMulEndMulTail */
            {
                ArrayList<Object> list = new86();
                push(goTo(33), list, false);
            }
            break;
            case 87: /* reduce AUnNegUnaryExp */
            {
                ArrayList<Object> list = new87();
                push(goTo(34), list, false);
            }
            break;
            case 88: /* reduce AUnParenUnaryExp */
            {
                ArrayList<Object> list = new88();
                push(goTo(34), list, false);
            }
            break;
            case 89: /* reduce AUnVarUnaryExp */
            {
                ArrayList<Object> list = new89();
                push(goTo(34), list, false);
            }
            break;
            case 90: /* reduce AUnValUnaryExp */
            {
                ArrayList<Object> list = new90();
                push(goTo(34), list, false);
            }
            break;
            case 91: /* reduce ATerminal$Declaracao */
            {
                ArrayList<Object> list = new91();
                push(goTo(35), list, true);
            }
            break;
            case 92: /* reduce ANonTerminal$Declaracao */
            {
                ArrayList<Object> list = new92();
                push(goTo(35), list, true);
            }
            break;
            case 93: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new93();
                push(goTo(36), list, true);
            }
            break;
            case 94: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new94();
                push(goTo(36), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprogramaprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TThis tthisNode2;
        TIs tisNode3;
        TProgram tprogramNode4;
        TIdentificador tidentificadorNode5;
        TPonto tpontoNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        @SuppressWarnings("unused") Object nullNode8 = null;
        tthisNode2 = (TThis)nodeArrayList1.get(0);
        tisNode3 = (TIs)nodeArrayList2.get(0);
        tprogramNode4 = (TProgram)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);

        pprogramaNode1 = new AProgramaPrograma(tthisNode2, tisNode3, tprogramNode4, tidentificadorNode5, tpontoNode6, null, null);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprogramaprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TThis tthisNode2;
        TIs tisNode3;
        TProgram tprogramNode4;
        TIdentificador tidentificadorNode5;
        TPonto tpontoNode6;
        PDeclaracoes pdeclaracoesNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        tthisNode2 = (TThis)nodeArrayList1.get(0);
        tisNode3 = (TIs)nodeArrayList2.get(0);
        tprogramNode4 = (TProgram)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);
        pdeclaracoesNode7 = (PDeclaracoes)nodeArrayList6.get(0);

        pprogramaNode1 = new AProgramaPrograma(tthisNode2, tisNode3, tprogramNode4, tidentificadorNode5, tpontoNode6, pdeclaracoesNode7, null);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprogramaprograma3Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TThis tthisNode2;
        TIs tisNode3;
        TProgram tprogramNode4;
        TIdentificador tidentificadorNode5;
        TPonto tpontoNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PComandos pcomandosNode8;
        tthisNode2 = (TThis)nodeArrayList1.get(0);
        tisNode3 = (TIs)nodeArrayList2.get(0);
        tprogramNode4 = (TProgram)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);
        pcomandosNode8 = (PComandos)nodeArrayList6.get(0);

        pprogramaNode1 = new AProgramaPrograma(tthisNode2, tisNode3, tprogramNode4, tidentificadorNode5, tpontoNode6, null, pcomandosNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprogramaprograma4Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TThis tthisNode2;
        TIs tisNode3;
        TProgram tprogramNode4;
        TIdentificador tidentificadorNode5;
        TPonto tpontoNode6;
        PDeclaracoes pdeclaracoesNode7;
        PComandos pcomandosNode8;
        tthisNode2 = (TThis)nodeArrayList1.get(0);
        tisNode3 = (TIs)nodeArrayList2.get(0);
        tprogramNode4 = (TProgram)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tpontoNode6 = (TPonto)nodeArrayList5.get(0);
        pdeclaracoesNode7 = (PDeclaracoes)nodeArrayList6.get(0);
        pcomandosNode8 = (PComandos)nodeArrayList7.get(0);

        pprogramaNode1 = new AProgramaPrograma(tthisNode2, tisNode3, tprogramNode4, tidentificadorNode5, tpontoNode6, pdeclaracoesNode7, pcomandosNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAdeclaracoesheaddeclaracoes1Declaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        TIt titNode2;
        TPresents tpresentsNode3;
        TDoisPontos tdoispontosNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        titNode2 = (TIt)nodeArrayList1.get(0);
        tpresentsNode3 = (TPresents)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        {
            // Block
        }

        pdeclaracoesNode1 = new ADeclaracoesHeadDeclaracoes(titNode2, tpresentsNode3, tdoispontosNode4, listNode5);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AAdeclaracoesheaddeclaracoes2Declaracoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracoes pdeclaracoesNode1;
        {
            // Block
        TIt titNode2;
        TPresents tpresentsNode3;
        TDoisPontos tdoispontosNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        titNode2 = (TIt)nodeArrayList1.get(0);
        tpresentsNode3 = (TPresents)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pdeclaracoesNode1 = new ADeclaracoesHeadDeclaracoes(titNode2, tpresentsNode3, tdoispontosNode4, listNode6);
        }
	nodeList.add(pdeclaracoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AComandosHeadComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        TLet tletNode2;
        TUs tusNode3;
        TBegin tbeginNode4;
        TDoisPontos tdoispontosNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TThat tthatNode8;
        TWould twouldNode9;
        TBe tbeNode10;
        TAll tallNode11;
        TPonto tpontoNode12;
        tletNode2 = (TLet)nodeArrayList1.get(0);
        tusNode3 = (TUs)nodeArrayList2.get(0);
        tbeginNode4 = (TBegin)nodeArrayList3.get(0);
        tdoispontosNode5 = (TDoisPontos)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        tthatNode8 = (TThat)nodeArrayList6.get(0);
        twouldNode9 = (TWould)nodeArrayList7.get(0);
        tbeNode10 = (TBe)nodeArrayList8.get(0);
        tallNode11 = (TAll)nodeArrayList9.get(0);
        tpontoNode12 = (TPonto)nodeArrayList10.get(0);

        pcomandosNode1 = new AComandosHeadComandos(tletNode2, tusNode3, tbeginNode4, tdoispontosNode5, listNode7, tthatNode8, twouldNode9, tbeNode10, tallNode11, tpontoNode12);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADeclaracaoMutDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TAlterable talterableNode2;
        PTipo ptipoNode3;
        TIdentificador tidentificadorNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        talterableNode2 = (TAlterable)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclaracaoMutDeclaracao(talterableNode2, ptipoNode3, tidentificadorNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ADeclaracaoUnaltDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TUnalterable tunalterableNode2;
        PTipo ptipoNode3;
        TIdentificador tidentificadorNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        tunalterableNode2 = (TUnalterable)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclaracaoUnaltDeclaracao(tunalterableNode2, ptipoNode3, tidentificadorNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ADeclaracaoUnaltInitDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TUnalterable tunalterableNode2;
        PTipo ptipoNode3;
        TIdentificador tidentificadorNode4;
        TInicializacao tinicializacaoNode5;
        PValor pvalorNode6;
        TPontoEVirgula tpontoevirgulaNode7;
        tunalterableNode2 = (TUnalterable)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        tidentificadorNode4 = (TIdentificador)nodeArrayList3.get(0);
        tinicializacaoNode5 = (TInicializacao)nodeArrayList4.get(0);
        pvalorNode6 = (PValor)nodeArrayList5.get(0);
        tpontoevirgulaNode7 = (TPontoEVirgula)nodeArrayList6.get(0);

        pdeclaracaoNode1 = new ADeclaracaoUnaltInitDeclaracao(tunalterableNode2, ptipoNode3, tidentificadorNode4, tinicializacaoNode5, pvalorNode6, tpontoevirgulaNode7);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ADeclaracaoVecDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TVector tvectorNode2;
        TOf tofNode3;
        PTipo ptipoNode4;
        PTamanhos ptamanhosNode5;
        TIdentificador tidentificadorNode6;
        TPontoEVirgula tpontoevirgulaNode7;
        tvectorNode2 = (TVector)nodeArrayList1.get(0);
        tofNode3 = (TOf)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        ptamanhosNode5 = (PTamanhos)nodeArrayList4.get(0);
        tidentificadorNode6 = (TIdentificador)nodeArrayList5.get(0);
        tpontoevirgulaNode7 = (TPontoEVirgula)nodeArrayList6.get(0);

        pdeclaracaoNode1 = new ADeclaracaoVecDeclaracao(tvectorNode2, tofNode3, ptipoNode4, ptamanhosNode5, tidentificadorNode6, tpontoevirgulaNode7);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ATamanhosMatrizTamanhos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTamanhos ptamanhosNode1;
        {
            // Block
        TParEsq tparesqNode2;
        TVectorMatrix tvectormatrixNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        tvectormatrixNode3 = (TVectorMatrix)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        ptamanhosNode1 = new ATamanhosMatrizTamanhos(tparesqNode2, tvectormatrixNode3, tpardirNode4);
        }
	nodeList.add(ptamanhosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ATamanhosUnitTamanhos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTamanhos ptamanhosNode1;
        {
            // Block
        TParEsq tparesqNode2;
        TNumero tnumeroNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        tnumeroNode3 = (TNumero)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        ptamanhosNode1 = new ATamanhosUnitTamanhos(tparesqNode2, tnumeroNode3, tpardirNode4);
        }
	nodeList.add(ptamanhosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ATipoNumberTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TNumber tnumberNode2;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoNumberTipo(tnumberNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ATipoAnswerTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TAnswer tanswerNode2;
        tanswerNode2 = (TAnswer)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoAnswerTipo(tanswerNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ATipoSymbolTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TSymbol tsymbolNode2;
        tsymbolNode2 = (TSymbol)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoSymbolTipo(tsymbolNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AVarIdVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvarNode1 = new AVarIdVar(tidentificadorNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AVarCallVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TParEsq tparesqNode3;
        PListaArgRparen plistaargrparenNode4;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        plistaargrparenNode4 = (PListaArgRparen)nodeArrayList3.get(0);

        pvarNode1 = new AVarCallVar(tidentificadorNode2, tparesqNode3, plistaargrparenNode4);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ALargHeadListaArgRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaArgRparen plistaargrparenNode1;
        {
            // Block
        POrExpRparen porexprparenNode2;
        porexprparenNode2 = (POrExpRparen)nodeArrayList1.get(0);

        plistaargrparenNode1 = new ALargHeadListaArgRparen(porexprparenNode2);
        }
	nodeList.add(plistaargrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AListaArgPrimeiroListaArg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaArg plistaargNode1;
        {
            // Block
        PExp pexpNode2;
        PListaArgTail plistaargtailNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        plistaargtailNode3 = (PListaArgTail)nodeArrayList2.get(0);

        plistaargNode1 = new AListaArgPrimeiroListaArg(pexpNode2, plistaargtailNode3);
        }
	nodeList.add(plistaargNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AListaArgContListaArgTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaArgTail plistaargtailNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PExp pexpNode3;
        PListaArgTail plistaargtailNode4;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        plistaargtailNode4 = (PListaArgTail)nodeArrayList3.get(0);

        plistaargtailNode1 = new AListaArgContListaArgTail(tvirgulaNode2, pexpNode3, plistaargtailNode4);
        }
	nodeList.add(plistaargtailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AListaArgFimListaArgTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaArgTail plistaargtailNode1;
        {
            // Block

        plistaargtailNode1 = new AListaArgFimListaArgTail();
        }
	nodeList.add(plistaargtailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AUnaltIdUnalt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnalt punaltNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        punaltNode1 = new AUnaltIdUnalt(tidentificadorNode2);
        }
	nodeList.add(punaltNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AValorSymbValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TSimbolo tsimboloNode2;
        tsimboloNode2 = (TSimbolo)nodeArrayList1.get(0);

        pvalorNode1 = new AValorSymbValor(tsimboloNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AValorBoolValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TValorBooleano tvalorbooleanoNode2;
        tvalorbooleanoNode2 = (TValorBooleano)nodeArrayList1.get(0);

        pvalorNode1 = new AValorBoolValor(tvalorbooleanoNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AValorNumValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        pvalorNode1 = new AValorNumValor(tnumeroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AValorStrValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TLiteral tliteralNode2;
        tliteralNode2 = (TLiteral)nodeArrayList1.get(0);

        pvalorNode1 = new AValorStrValor(tliteralNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ACmdCndComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoCasado pcomandocasadoNode2;
        pcomandocasadoNode2 = (PComandoCasado)nodeArrayList1.get(0);

        pcomandoNode1 = new ACmdCndComando(pcomandocasadoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ACmdSoltComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComandoSolteiro pcomandosolteiroNode2;
        pcomandosolteiroNode2 = (PComandoSolteiro)nodeArrayList1.get(0);

        pcomandoNode1 = new ACmdSoltComando(pcomandosolteiroNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAtrComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList4.get(0);

        pcomandocasadoNode1 = new AAtrComandoCasado(pvarNode2, tatribuicaoNode3, pexpNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AInitComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        PUnalt punaltNode2;
        TInicializacao tinicializacaoNode3;
        PExp pexpNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        punaltNode2 = (PUnalt)nodeArrayList1.get(0);
        tinicializacaoNode3 = (TInicializacao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList4.get(0);

        pcomandocasadoNode1 = new AInitComandoCasado(punaltNode2, tinicializacaoNode3, pexpNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AIfCasaComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        TJust tjustNode2;
        TIn tinNode3;
        TCase tcaseNode4;
        TThatKw tthatkwNode5;
        TParEsq tparesqNode6;
        PExp pexpNode7;
        TParDir tpardirNode8;
        TDo tdoNode9;
        PComandoCasado pcomandocasadoNode10;
        TOtherwise totherwiseNode11;
        TDo tdoNode12;
        PComandoCasado pcomandocasadoNode13;
        tjustNode2 = (TJust)nodeArrayList1.get(0);
        tinNode3 = (TIn)nodeArrayList2.get(0);
        tcaseNode4 = (TCase)nodeArrayList3.get(0);
        tthatkwNode5 = (TThatKw)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pexpNode7 = (PExp)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        tdoNode9 = (TDo)nodeArrayList8.get(0);
        pcomandocasadoNode10 = (PComandoCasado)nodeArrayList9.get(0);
        totherwiseNode11 = (TOtherwise)nodeArrayList10.get(0);
        tdoNode12 = (TDo)nodeArrayList11.get(0);
        pcomandocasadoNode13 = (PComandoCasado)nodeArrayList12.get(0);

        pcomandocasadoNode1 = new AIfCasaComandoCasado(tjustNode2, tinNode3, tcaseNode4, tthatkwNode5, tparesqNode6, pexpNode7, tpardirNode8, tdoNode9, pcomandocasadoNode10, totherwiseNode11, tdoNode12, pcomandocasadoNode13);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce ACapComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        TCapture tcaptureNode2;
        TParEsq tparesqNode3;
        PListaVar plistavarNode4;
        TParDir tpardirNode5;
        TPontoEVirgula tpontoevirgulaNode6;
        tcaptureNode2 = (TCapture)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        plistavarNode4 = (PListaVar)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoEVirgula)nodeArrayList5.get(0);

        pcomandocasadoNode1 = new ACapComandoCasado(tcaptureNode2, tparesqNode3, plistavarNode4, tpardirNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AShowComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        TShow tshowNode2;
        TParEsq tparesqNode3;
        PListaExpRparen plistaexprparenNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        tshowNode2 = (TShow)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        plistaexprparenNode4 = (PListaExpRparen)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList4.get(0);

        pcomandocasadoNode1 = new AShowComandoCasado(tshowNode2, tparesqNode3, plistaexprparenNode4, tpontoevirgulaNode5);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AWhileComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        PWhileStmt pwhilestmtNode2;
        pwhilestmtNode2 = (PWhileStmt)nodeArrayList1.get(0);

        pcomandocasadoNode1 = new AWhileComandoCasado(pwhilestmtNode2);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AForComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        PForStmt pforstmtNode2;
        pforstmtNode2 = (PForStmt)nodeArrayList1.get(0);

        pcomandocasadoNode1 = new AForComandoCasado(pforstmtNode2);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ABreakComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        TAbandon tabandonNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        tabandonNode2 = (TAbandon)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);

        pcomandocasadoNode1 = new ABreakComandoCasado(tabandonNode2, tpontoevirgulaNode3);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AContComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        TGo tgoNode2;
        TTo ttoNode3;
        TNext tnextNode4;
        TIteration titerationNode5;
        TPontoEVirgula tpontoevirgulaNode6;
        tgoNode2 = (TGo)nodeArrayList1.get(0);
        ttoNode3 = (TTo)nodeArrayList2.get(0);
        tnextNode4 = (TNext)nodeArrayList3.get(0);
        titerationNode5 = (TIteration)nodeArrayList4.get(0);
        tpontoevirgulaNode6 = (TPontoEVirgula)nodeArrayList5.get(0);

        pcomandocasadoNode1 = new AContComandoCasado(tgoNode2, ttoNode3, tnextNode4, titerationNode5, tpontoevirgulaNode6);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ACmdBlkComandoCasado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoCasado pcomandocasadoNode1;
        {
            // Block
        PBloco pblocoNode2;
        pblocoNode2 = (PBloco)nodeArrayList1.get(0);

        pcomandocasadoNode1 = new ACmdBlkComandoCasado(pblocoNode2);
        }
	nodeList.add(pcomandocasadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AIfSCmComandoSolteiro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSolteiro pcomandosolteiroNode1;
        {
            // Block
        TJust tjustNode2;
        TIn tinNode3;
        TCase tcaseNode4;
        TThatKw tthatkwNode5;
        TParEsq tparesqNode6;
        PExp pexpNode7;
        TParDir tpardirNode8;
        TDo tdoNode9;
        PComando pcomandoNode10;
        tjustNode2 = (TJust)nodeArrayList1.get(0);
        tinNode3 = (TIn)nodeArrayList2.get(0);
        tcaseNode4 = (TCase)nodeArrayList3.get(0);
        tthatkwNode5 = (TThatKw)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pexpNode7 = (PExp)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        tdoNode9 = (TDo)nodeArrayList8.get(0);
        pcomandoNode10 = (PComando)nodeArrayList9.get(0);

        pcomandosolteiroNode1 = new AIfSCmComandoSolteiro(tjustNode2, tinNode3, tcaseNode4, tthatkwNode5, tparesqNode6, pexpNode7, tpardirNode8, tdoNode9, pcomandoNode10);
        }
	nodeList.add(pcomandosolteiroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AIfSMixComandoSolteiro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSolteiro pcomandosolteiroNode1;
        {
            // Block
        TJust tjustNode2;
        TIn tinNode3;
        TCase tcaseNode4;
        TThatKw tthatkwNode5;
        TParEsq tparesqNode6;
        PExp pexpNode7;
        TParDir tpardirNode8;
        TDo tdoNode9;
        PComandoCasado pcomandocasadoNode10;
        TOtherwise totherwiseNode11;
        TDo tdoNode12;
        PComandoSolteiro pcomandosolteiroNode13;
        tjustNode2 = (TJust)nodeArrayList1.get(0);
        tinNode3 = (TIn)nodeArrayList2.get(0);
        tcaseNode4 = (TCase)nodeArrayList3.get(0);
        tthatkwNode5 = (TThatKw)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pexpNode7 = (PExp)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        tdoNode9 = (TDo)nodeArrayList8.get(0);
        pcomandocasadoNode10 = (PComandoCasado)nodeArrayList9.get(0);
        totherwiseNode11 = (TOtherwise)nodeArrayList10.get(0);
        tdoNode12 = (TDo)nodeArrayList11.get(0);
        pcomandosolteiroNode13 = (PComandoSolteiro)nodeArrayList12.get(0);

        pcomandosolteiroNode1 = new AIfSMixComandoSolteiro(tjustNode2, tinNode3, tcaseNode4, tthatkwNode5, tparesqNode6, pexpNode7, tpardirNode8, tdoNode9, pcomandocasadoNode10, totherwiseNode11, tdoNode12, pcomandosolteiroNode13);
        }
	nodeList.add(pcomandosolteiroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AWhileStmtKwWhileStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWhileStmt pwhilestmtNode1;
        {
            // Block
        TAs tasNode2;
        TLong tlongNode3;
        TAs tasNode4;
        TParEsq tparesqNode5;
        PExp pexpNode6;
        TParDir tpardirNode7;
        TDo tdoNode8;
        PComandoCasado pcomandocasadoNode9;
        tasNode2 = (TAs)nodeArrayList1.get(0);
        tlongNode3 = (TLong)nodeArrayList2.get(0);
        tasNode4 = (TAs)nodeArrayList3.get(0);
        tparesqNode5 = (TParEsq)nodeArrayList4.get(0);
        pexpNode6 = (PExp)nodeArrayList5.get(0);
        tpardirNode7 = (TParDir)nodeArrayList6.get(0);
        tdoNode8 = (TDo)nodeArrayList7.get(0);
        pcomandocasadoNode9 = (PComandoCasado)nodeArrayList8.get(0);

        pwhilestmtNode1 = new AWhileStmtKwWhileStmt(tasNode2, tlongNode3, tasNode4, tparesqNode5, pexpNode6, tpardirNode7, tdoNode8, pcomandocasadoNode9);
        }
	nodeList.add(pwhilestmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AForStmtKwForStmt */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PForStmt pforstmtNode1;
        {
            // Block
        TConsidering tconsideringNode2;
        PVar pvarNode3;
        TFrom tfromNode4;
        TTo ttoNode5;
        PExp pexpNode6;
        TBy tbyNode7;
        PExp pexpNode8;
        TDo tdoNode9;
        PComandoCasado pcomandocasadoNode10;
        tconsideringNode2 = (TConsidering)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tfromNode4 = (TFrom)nodeArrayList3.get(0);
        ttoNode5 = (TTo)nodeArrayList4.get(0);
        pexpNode6 = (PExp)nodeArrayList5.get(0);
        tbyNode7 = (TBy)nodeArrayList6.get(0);
        pexpNode8 = (PExp)nodeArrayList7.get(0);
        tdoNode9 = (TDo)nodeArrayList8.get(0);
        pcomandocasadoNode10 = (PComandoCasado)nodeArrayList9.get(0);

        pforstmtNode1 = new AForStmtKwForStmt(tconsideringNode2, pvarNode3, tfromNode4, ttoNode5, pexpNode6, tbyNode7, pexpNode8, tdoNode9, pcomandocasadoNode10);
        }
	nodeList.add(pforstmtNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AListaVarPrimeiraListaVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaVar plistavarNode1;
        {
            // Block
        PVar pvarNode2;
        PListaVarTail plistavartailNode3;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        plistavartailNode3 = (PListaVarTail)nodeArrayList2.get(0);

        plistavarNode1 = new AListaVarPrimeiraListaVar(pvarNode2, plistavartailNode3);
        }
	nodeList.add(plistavarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AListaVarContListaVarTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaVarTail plistavartailNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PVar pvarNode3;
        PListaVarTail plistavartailNode4;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        plistavartailNode4 = (PListaVarTail)nodeArrayList3.get(0);

        plistavartailNode1 = new AListaVarContListaVarTail(tvirgulaNode2, pvarNode3, plistavartailNode4);
        }
	nodeList.add(plistavartailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AListaVarFimListaVarTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaVarTail plistavartailNode1;
        {
            // Block

        plistavartailNode1 = new AListaVarFimListaVarTail();
        }
	nodeList.add(plistavartailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ALexpHeadListaExpRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExpRparen plistaexprparenNode1;
        {
            // Block
        POrExpRparen porexprparenNode2;
        porexprparenNode2 = (POrExpRparen)nodeArrayList1.get(0);

        plistaexprparenNode1 = new ALexpHeadListaExpRparen(porexprparenNode2);
        }
	nodeList.add(plistaexprparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AAblocodecbloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TColcheteEsq tcolcheteesqNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        TColcheteDir tcolchetedirNode4;
        tcolcheteesqNode2 = (TColcheteEsq)nodeArrayList1.get(0);
        {
            // Block
        }
        tcolchetedirNode4 = (TColcheteDir)nodeArrayList2.get(0);

        pblocoNode1 = new ABlocoDecBloco(tcolcheteesqNode2, listNode3, tcolchetedirNode4);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AAblocodecbloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TColcheteEsq tcolcheteesqNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TColcheteDir tcolchetedirNode5;
        tcolcheteesqNode2 = (TColcheteEsq)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tcolchetedirNode5 = (TColcheteDir)nodeArrayList3.get(0);

        pblocoNode1 = new ABlocoDecBloco(tcolcheteesqNode2, listNode4, tcolchetedirNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AAblococmdbloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TColcheteEsq tcolcheteesqNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TColcheteDir tcolchetedirNode6;
        tcolcheteesqNode2 = (TColcheteEsq)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tcolchetedirNode6 = (TColcheteDir)nodeArrayList3.get(0);

        pblocoNode1 = new ABlocoCmdBloco(tcolcheteesqNode2, listNode3, listNode5, tcolchetedirNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AAblococmdbloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TColcheteEsq tcolcheteesqNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TColcheteDir tcolchetedirNode7;
        tcolcheteesqNode2 = (TColcheteEsq)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tcolchetedirNode7 = (TColcheteDir)nodeArrayList4.get(0);

        pblocoNode1 = new ABlocoCmdBloco(tcolcheteesqNode2, listNode4, listNode6, tcolchetedirNode7);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        POrExp porexpNode2;
        porexpNode2 = (POrExp)nodeArrayList1.get(0);

        pexpNode1 = new AExp(porexpNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AOrNormOrExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrExp porexpNode1;
        {
            // Block
        PAndExp pandexpNode2;
        POrTail portailNode3;
        pandexpNode2 = (PAndExp)nodeArrayList1.get(0);
        portailNode3 = (POrTail)nodeArrayList2.get(0);

        porexpNode1 = new AOrNormOrExp(pandexpNode2, portailNode3);
        }
	nodeList.add(porexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AOrRparOrExpRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrExpRparen porexprparenNode1;
        {
            // Block
        PAndExpRparen pandexprparenNode2;
        POrTailRparen portailrparenNode3;
        pandexprparenNode2 = (PAndExpRparen)nodeArrayList1.get(0);
        portailrparenNode3 = (POrTailRparen)nodeArrayList2.get(0);

        porexprparenNode1 = new AOrRparOrExpRparen(pandexprparenNode2, portailrparenNode3);
        }
	nodeList.add(porexprparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AOrMoreOrTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrTail portailNode1;
        {
            // Block
        TOr torNode2;
        PAndExp pandexpNode3;
        POrTail portailNode4;
        torNode2 = (TOr)nodeArrayList1.get(0);
        pandexpNode3 = (PAndExp)nodeArrayList2.get(0);
        portailNode4 = (POrTail)nodeArrayList3.get(0);

        portailNode1 = new AOrMoreOrTail(torNode2, pandexpNode3, portailNode4);
        }
	nodeList.add(portailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AXorMoreOrTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrTail portailNode1;
        {
            // Block
        TXor txorNode2;
        PAndExp pandexpNode3;
        POrTail portailNode4;
        txorNode2 = (TXor)nodeArrayList1.get(0);
        pandexpNode3 = (PAndExp)nodeArrayList2.get(0);
        portailNode4 = (POrTail)nodeArrayList3.get(0);

        portailNode1 = new AXorMoreOrTail(txorNode2, pandexpNode3, portailNode4);
        }
	nodeList.add(portailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AOrEndOrTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        POrTail portailNode1;
        {
            // Block

        portailNode1 = new AOrEndOrTail();
        }
	nodeList.add(portailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AOrRMoreOrTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrTailRparen portailrparenNode1;
        {
            // Block
        TOr torNode2;
        PAndExpRparen pandexprparenNode3;
        POrTailRparen portailrparenNode4;
        torNode2 = (TOr)nodeArrayList1.get(0);
        pandexprparenNode3 = (PAndExpRparen)nodeArrayList2.get(0);
        portailrparenNode4 = (POrTailRparen)nodeArrayList3.get(0);

        portailrparenNode1 = new AOrRMoreOrTailRparen(torNode2, pandexprparenNode3, portailrparenNode4);
        }
	nodeList.add(portailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AXorRMoreOrTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrTailRparen portailrparenNode1;
        {
            // Block
        TXor txorNode2;
        PAndExpRparen pandexprparenNode3;
        POrTailRparen portailrparenNode4;
        txorNode2 = (TXor)nodeArrayList1.get(0);
        pandexprparenNode3 = (PAndExpRparen)nodeArrayList2.get(0);
        portailrparenNode4 = (POrTailRparen)nodeArrayList3.get(0);

        portailrparenNode1 = new AXorRMoreOrTailRparen(txorNode2, pandexprparenNode3, portailrparenNode4);
        }
	nodeList.add(portailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AOrRParOrTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrTailRparen portailrparenNode1;
        {
            // Block
        TParDir tpardirNode2;
        tpardirNode2 = (TParDir)nodeArrayList1.get(0);

        portailrparenNode1 = new AOrRParOrTailRparen(tpardirNode2);
        }
	nodeList.add(portailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AOrRComOrTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POrTailRparen portailrparenNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PListaExpRparen plistaexprparenNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        plistaexprparenNode3 = (PListaExpRparen)nodeArrayList2.get(0);

        portailrparenNode1 = new AOrRComOrTailRparen(tvirgulaNode2, plistaexprparenNode3);
        }
	nodeList.add(portailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AAndTermAndExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndExp pandexpNode1;
        {
            // Block
        PRelExp prelexpNode2;
        prelexpNode2 = (PRelExp)nodeArrayList1.get(0);

        pandexpNode1 = new AAndTermAndExp(prelexpNode2);
        }
	nodeList.add(pandexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AAndMoreAndExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndExp pandexpNode1;
        {
            // Block
        PRelExp prelexpNode2;
        TAnd tandNode3;
        PAndExp pandexpNode4;
        prelexpNode2 = (PRelExp)nodeArrayList1.get(0);
        tandNode3 = (TAnd)nodeArrayList2.get(0);
        pandexpNode4 = (PAndExp)nodeArrayList3.get(0);

        pandexpNode1 = new AAndMoreAndExp(prelexpNode2, tandNode3, pandexpNode4);
        }
	nodeList.add(pandexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AAndExpRTermAndExpRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndExpRparen pandexprparenNode1;
        {
            // Block
        PRelExp prelexpNode2;
        prelexpNode2 = (PRelExp)nodeArrayList1.get(0);

        pandexprparenNode1 = new AAndExpRTermAndExpRparen(prelexpNode2);
        }
	nodeList.add(pandexprparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AAndExpRMoreAndExpRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndExpRparen pandexprparenNode1;
        {
            // Block
        PRelExp prelexpNode2;
        TAnd tandNode3;
        PAndExpRparen pandexprparenNode4;
        prelexpNode2 = (PRelExp)nodeArrayList1.get(0);
        tandNode3 = (TAnd)nodeArrayList2.get(0);
        pandexprparenNode4 = (PAndExpRparen)nodeArrayList3.get(0);

        pandexprparenNode1 = new AAndExpRMoreAndExpRparen(prelexpNode2, tandNode3, pandexprparenNode4);
        }
	nodeList.add(pandexprparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AAndRMoreAndTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndTailRparen pandtailrparenNode1;
        {
            // Block
        TAnd tandNode2;
        PRelExp prelexpNode3;
        PAndTailRparen pandtailrparenNode4;
        tandNode2 = (TAnd)nodeArrayList1.get(0);
        prelexpNode3 = (PRelExp)nodeArrayList2.get(0);
        pandtailrparenNode4 = (PAndTailRparen)nodeArrayList3.get(0);

        pandtailrparenNode1 = new AAndRMoreAndTailRparen(tandNode2, prelexpNode3, pandtailrparenNode4);
        }
	nodeList.add(pandtailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AAndRParAndTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndTailRparen pandtailrparenNode1;
        {
            // Block
        TParDir tpardirNode2;
        tpardirNode2 = (TParDir)nodeArrayList1.get(0);

        pandtailrparenNode1 = new AAndRParAndTailRparen(tpardirNode2);
        }
	nodeList.add(pandtailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AAndRComAndTailRparen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndTailRparen pandtailrparenNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PListaExpRparen plistaexprparenNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        plistaexprparenNode3 = (PListaExpRparen)nodeArrayList2.get(0);

        pandtailrparenNode1 = new AAndRComAndTailRparen(tvirgulaNode2, plistaexprparenNode3);
        }
	nodeList.add(pandtailrparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ARelHeadRelExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelExp prelexpNode1;
        {
            // Block
        PAddExp paddexpNode2;
        PRelTail preltailNode3;
        paddexpNode2 = (PAddExp)nodeArrayList1.get(0);
        preltailNode3 = (PRelTail)nodeArrayList2.get(0);

        prelexpNode1 = new ARelHeadRelExp(paddexpNode2, preltailNode3);
        }
	nodeList.add(prelexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ARelGtRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelTail preltailNode1;
        {
            // Block
        TMaior tmaiorNode2;
        PAddExp paddexpNode3;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);
        paddexpNode3 = (PAddExp)nodeArrayList2.get(0);

        preltailNode1 = new ARelGtRelTail(tmaiorNode2, paddexpNode3);
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ARelLtRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelTail preltailNode1;
        {
            // Block
        TMenor tmenorNode2;
        PAddExp paddexpNode3;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);
        paddexpNode3 = (PAddExp)nodeArrayList2.get(0);

        preltailNode1 = new ARelLtRelTail(tmenorNode2, paddexpNode3);
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ARelGeRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelTail preltailNode1;
        {
            // Block
        TMaiorigual tmaiorigualNode2;
        PAddExp paddexpNode3;
        tmaiorigualNode2 = (TMaiorigual)nodeArrayList1.get(0);
        paddexpNode3 = (PAddExp)nodeArrayList2.get(0);

        preltailNode1 = new ARelGeRelTail(tmaiorigualNode2, paddexpNode3);
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ARelLeRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelTail preltailNode1;
        {
            // Block
        TMenorigual tmenorigualNode2;
        PAddExp paddexpNode3;
        tmenorigualNode2 = (TMenorigual)nodeArrayList1.get(0);
        paddexpNode3 = (PAddExp)nodeArrayList2.get(0);

        preltailNode1 = new ARelLeRelTail(tmenorigualNode2, paddexpNode3);
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ARelEqRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelTail preltailNode1;
        {
            // Block
        TIgual tigualNode2;
        PAddExp paddexpNode3;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);
        paddexpNode3 = (PAddExp)nodeArrayList2.get(0);

        preltailNode1 = new ARelEqRelTail(tigualNode2, paddexpNode3);
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ARelNeRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelTail preltailNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        PAddExp paddexpNode3;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);
        paddexpNode3 = (PAddExp)nodeArrayList2.get(0);

        preltailNode1 = new ARelNeRelTail(tdiferenteNode2, paddexpNode3);
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ARelEndRelTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PRelTail preltailNode1;
        {
            // Block

        preltailNode1 = new ARelEndRelTail();
        }
	nodeList.add(preltailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AAddTermAddExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAddExp paddexpNode1;
        {
            // Block
        PMulExp pmulexpNode2;
        pmulexpNode2 = (PMulExp)nodeArrayList1.get(0);

        paddexpNode1 = new AAddTermAddExp(pmulexpNode2);
        }
	nodeList.add(paddexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AAddPlusAddExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAddExp paddexpNode1;
        {
            // Block
        PMulExp pmulexpNode2;
        TSoma tsomaNode3;
        PAddExp paddexpNode4;
        pmulexpNode2 = (PMulExp)nodeArrayList1.get(0);
        tsomaNode3 = (TSoma)nodeArrayList2.get(0);
        paddexpNode4 = (PAddExp)nodeArrayList3.get(0);

        paddexpNode1 = new AAddPlusAddExp(pmulexpNode2, tsomaNode3, paddexpNode4);
        }
	nodeList.add(paddexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AAddMinusAddExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAddExp paddexpNode1;
        {
            // Block
        PMulExp pmulexpNode2;
        TMenos tmenosNode3;
        PAddExp paddexpNode4;
        pmulexpNode2 = (PMulExp)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        paddexpNode4 = (PAddExp)nodeArrayList3.get(0);

        paddexpNode1 = new AAddMinusAddExp(pmulexpNode2, tmenosNode3, paddexpNode4);
        }
	nodeList.add(paddexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AMulExpTermMulExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulExp pmulexpNode1;
        {
            // Block
        PUnaryExp punaryexpNode2;
        punaryexpNode2 = (PUnaryExp)nodeArrayList1.get(0);

        pmulexpNode1 = new AMulExpTermMulExp(punaryexpNode2);
        }
	nodeList.add(pmulexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AMulExpTimesMulExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulExp pmulexpNode1;
        {
            // Block
        PUnaryExp punaryexpNode2;
        TMult tmultNode3;
        PMulExp pmulexpNode4;
        punaryexpNode2 = (PUnaryExp)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pmulexpNode4 = (PMulExp)nodeArrayList3.get(0);

        pmulexpNode1 = new AMulExpTimesMulExp(punaryexpNode2, tmultNode3, pmulexpNode4);
        }
	nodeList.add(pmulexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AMulExpDivMulExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulExp pmulexpNode1;
        {
            // Block
        PUnaryExp punaryexpNode2;
        TDiv tdivNode3;
        PMulExp pmulexpNode4;
        punaryexpNode2 = (PUnaryExp)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pmulexpNode4 = (PMulExp)nodeArrayList3.get(0);

        pmulexpNode1 = new AMulExpDivMulExp(punaryexpNode2, tdivNode3, pmulexpNode4);
        }
	nodeList.add(pmulexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AMulExpModMulExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulExp pmulexpNode1;
        {
            // Block
        PUnaryExp punaryexpNode2;
        TMod tmodNode3;
        PMulExp pmulexpNode4;
        punaryexpNode2 = (PUnaryExp)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        pmulexpNode4 = (PMulExp)nodeArrayList3.get(0);

        pmulexpNode1 = new AMulExpModMulExp(punaryexpNode2, tmodNode3, pmulexpNode4);
        }
	nodeList.add(pmulexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AMulTimesMulTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulTail pmultailNode1;
        {
            // Block
        TMult tmultNode2;
        PUnaryExp punaryexpNode3;
        PMulTail pmultailNode4;
        tmultNode2 = (TMult)nodeArrayList1.get(0);
        punaryexpNode3 = (PUnaryExp)nodeArrayList2.get(0);
        pmultailNode4 = (PMulTail)nodeArrayList3.get(0);

        pmultailNode1 = new AMulTimesMulTail(tmultNode2, punaryexpNode3, pmultailNode4);
        }
	nodeList.add(pmultailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AMulDivMulTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulTail pmultailNode1;
        {
            // Block
        TDiv tdivNode2;
        PUnaryExp punaryexpNode3;
        PMulTail pmultailNode4;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);
        punaryexpNode3 = (PUnaryExp)nodeArrayList2.get(0);
        pmultailNode4 = (PMulTail)nodeArrayList3.get(0);

        pmultailNode1 = new AMulDivMulTail(tdivNode2, punaryexpNode3, pmultailNode4);
        }
	nodeList.add(pmultailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AMulModMulTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMulTail pmultailNode1;
        {
            // Block
        TMod tmodNode2;
        PUnaryExp punaryexpNode3;
        PMulTail pmultailNode4;
        tmodNode2 = (TMod)nodeArrayList1.get(0);
        punaryexpNode3 = (PUnaryExp)nodeArrayList2.get(0);
        pmultailNode4 = (PMulTail)nodeArrayList3.get(0);

        pmultailNode1 = new AMulModMulTail(tmodNode2, punaryexpNode3, pmultailNode4);
        }
	nodeList.add(pmultailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AMulEndMulTail */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PMulTail pmultailNode1;
        {
            // Block

        pmultailNode1 = new AMulEndMulTail();
        }
	nodeList.add(pmultailNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AUnNegUnaryExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnaryExp punaryexpNode1;
        {
            // Block
        TMenos tmenosNode2;
        PUnaryExp punaryexpNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        punaryexpNode3 = (PUnaryExp)nodeArrayList2.get(0);

        punaryexpNode1 = new AUnNegUnaryExp(tmenosNode2, punaryexpNode3);
        }
	nodeList.add(punaryexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AUnParenUnaryExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnaryExp punaryexpNode1;
        {
            // Block
        TParEsq tparesqNode2;
        PExp pexpNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        punaryexpNode1 = new AUnParenUnaryExp(tparesqNode2, pexpNode3, tpardirNode4);
        }
	nodeList.add(punaryexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce AUnVarUnaryExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnaryExp punaryexpNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        punaryexpNode1 = new AUnVarUnaryExp(pvarNode2);
        }
	nodeList.add(punaryexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AUnValUnaryExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnaryExp punaryexpNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        punaryexpNode1 = new AUnValUnaryExp(pvalorNode2);
        }
	nodeList.add(punaryexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ATerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclaracao pdeclaracaoNode1;
        pdeclaracaoNode1 = (PDeclaracao)nodeArrayList1.get(0);
	if(pdeclaracaoNode1 != null)
	{
	  listNode2.add(pdeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ANonTerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclaracao pdeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclaracaoNode2 != null)
	{
	  listNode3.add(pdeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {8, SHIFT, 1}, },
			{{-1, ERROR, 1}, {9, SHIFT, 3}, },
			{{-1, ERROR, 2}, {70, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {10, SHIFT, 4}, },
			{{-1, ERROR, 4}, {68, SHIFT, 5}, },
			{{-1, ERROR, 5}, {0, SHIFT, 6}, },
			{{-1, REDUCE, 0}, {11, SHIFT, 7}, {13, SHIFT, 8}, },
			{{-1, ERROR, 7}, {12, SHIFT, 11}, },
			{{-1, ERROR, 8}, {14, SHIFT, 12}, },
			{{-1, REDUCE, 1}, {13, SHIFT, 8}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 11}, {1, SHIFT, 14}, },
			{{-1, ERROR, 12}, {15, SHIFT, 15}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 4}, {20, SHIFT, 16}, {21, SHIFT, 17}, {22, SHIFT, 18}, },
			{{-1, ERROR, 15}, {1, SHIFT, 21}, },
			{{-1, ERROR, 16}, {24, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 24}, },
			{{-1, ERROR, 17}, {24, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 24}, },
			{{-1, ERROR, 18}, {23, SHIFT, 27}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 5}, {20, SHIFT, 16}, {21, SHIFT, 17}, {22, SHIFT, 18}, },
			{{-1, ERROR, 21}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 25}, {68, SHIFT, 47}, },
			{{-1, ERROR, 26}, {68, SHIFT, 48}, },
			{{-1, ERROR, 27}, {24, SHIFT, 22}, {25, SHIFT, 23}, {26, SHIFT, 24}, },
			{{-1, REDUCE, 92}, },
			{{-1, ERROR, 29}, {63, SHIFT, 50}, },
			{{-1, ERROR, 30}, {63, SHIFT, 51}, },
			{{-1, ERROR, 31}, {30, SHIFT, 52}, },
			{{-1, ERROR, 32}, {36, SHIFT, 53}, },
			{{-1, ERROR, 33}, {68, SHIFT, 54}, },
			{{-1, ERROR, 34}, {3, SHIFT, 56}, },
			{{-1, ERROR, 35}, {39, SHIFT, 57}, },
			{{-1, ERROR, 36}, {20, SHIFT, 16}, {21, SHIFT, 17}, {22, SHIFT, 18}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {66, SHIFT, 58}, {68, SHIFT, 37}, },
			{{-1, REDUCE, 22}, {46, REDUCE, 16}, {63, SHIFT, 61}, },
			{{-1, ERROR, 38}, {46, SHIFT, 62}, },
			{{-1, ERROR, 39}, {45, SHIFT, 63}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 46}, {16, SHIFT, 64}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, ERROR, 47}, {3, SHIFT, 66}, },
			{{-1, ERROR, 48}, {3, SHIFT, 67}, {45, SHIFT, 68}, },
			{{-1, ERROR, 49}, {63, SHIFT, 69}, },
			{{-1, ERROR, 50}, {68, SHIFT, 54}, },
			{{-1, ERROR, 51}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 52}, {31, SHIFT, 88}, },
			{{-1, ERROR, 53}, {35, SHIFT, 89}, },
			{{-1, REDUCE, 16}, {63, SHIFT, 61}, },
			{{-1, ERROR, 55}, {38, SHIFT, 90}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 57}, {43, SHIFT, 91}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 59}, {20, SHIFT, 16}, {21, SHIFT, 17}, {22, SHIFT, 18}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {66, SHIFT, 92}, {68, SHIFT, 37}, },
			{{-1, ERROR, 60}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {66, SHIFT, 94}, {68, SHIFT, 37}, },
			{{-1, ERROR, 61}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 62}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 63}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 64}, {17, SHIFT, 102}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 68}, {4, SHIFT, 73}, {5, SHIFT, 74}, {62, SHIFT, 76}, {67, SHIFT, 78}, },
			{{-1, ERROR, 69}, {6, SHIFT, 104}, {67, SHIFT, 105}, },
			{{-1, ERROR, 70}, {68, SHIFT, 106}, },
			{{-1, REDUCE, 45}, {2, SHIFT, 107}, },
			{{-1, ERROR, 72}, {64, SHIFT, 109}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 75}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 77}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 81}, {3, SHIFT, 112}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 83}, {2, SHIFT, 113}, {59, SHIFT, 114}, {61, SHIFT, 115}, {64, SHIFT, 116}, },
			{{-1, REDUCE, 63}, {58, SHIFT, 118}, },
			{{-1, REDUCE, 75}, {47, SHIFT, 119}, {48, SHIFT, 120}, {49, SHIFT, 121}, {50, SHIFT, 122}, {51, SHIFT, 123}, {52, SHIFT, 124}, },
			{{-1, REDUCE, 76}, {53, SHIFT, 126}, {54, SHIFT, 127}, },
			{{-1, REDUCE, 79}, {55, SHIFT, 128}, {56, SHIFT, 129}, {57, SHIFT, 130}, },
			{{-1, ERROR, 88}, {32, SHIFT, 131}, },
			{{-1, ERROR, 89}, {63, SHIFT, 132}, },
			{{-1, ERROR, 90}, {39, SHIFT, 133}, },
			{{-1, ERROR, 91}, {44, SHIFT, 134}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 93}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {66, SHIFT, 135}, {68, SHIFT, 37}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 97}, {3, SHIFT, 136}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 56}, {59, SHIFT, 137}, {61, SHIFT, 138}, },
			{{-1, REDUCE, 61}, {58, SHIFT, 140}, },
			{{-1, ERROR, 101}, {3, SHIFT, 141}, },
			{{-1, ERROR, 102}, {18, SHIFT, 142}, },
			{{-1, ERROR, 103}, {3, SHIFT, 143}, },
			{{-1, ERROR, 104}, {64, SHIFT, 144}, },
			{{-1, ERROR, 105}, {64, SHIFT, 145}, },
			{{-1, ERROR, 106}, {3, SHIFT, 146}, },
			{{-1, ERROR, 107}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 109}, {3, SHIFT, 148}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 111}, {64, SHIFT, 149}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 113}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 114}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 115}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 118}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 119}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 120}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 121}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 122}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 123}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 124}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 126}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 127}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 128}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 129}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 130}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 131}, {63, SHIFT, 165}, },
			{{-1, ERROR, 132}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 133}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 134}, {3, SHIFT, 168}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 137}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 138}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 140}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 142}, {19, SHIFT, 172}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 45}, {2, SHIFT, 107}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 151}, {2, SHIFT, 113}, {59, SHIFT, 114}, {61, SHIFT, 115}, {64, SHIFT, 116}, },
			{{-1, ERROR, 152}, {2, SHIFT, 113}, {59, SHIFT, 114}, {61, SHIFT, 115}, {64, SHIFT, 116}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 165}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 166}, {64, SHIFT, 177}, },
			{{-1, ERROR, 167}, {40, SHIFT, 178}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 56}, {59, SHIFT, 137}, {61, SHIFT, 138}, },
			{{-1, REDUCE, 56}, {59, SHIFT, 137}, {61, SHIFT, 138}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 172}, {0, SHIFT, 181}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 176}, {64, SHIFT, 182}, },
			{{-1, ERROR, 177}, {33, SHIFT, 183}, },
			{{-1, ERROR, 178}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 6}, },
			{{-1, ERROR, 182}, {33, SHIFT, 185}, },
			{{-1, ERROR, 183}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 186}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, ERROR, 184}, {33, SHIFT, 188}, },
			{{-1, ERROR, 185}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, ERROR, 186}, {30, SHIFT, 191}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 188}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 186}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 27}, {34, SHIFT, 193}, },
			{{-1, ERROR, 191}, {31, SHIFT, 194}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 193}, {33, SHIFT, 195}, },
			{{-1, ERROR, 194}, {32, SHIFT, 196}, },
			{{-1, ERROR, 195}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 31}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, ERROR, 196}, {63, SHIFT, 199}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 199}, {4, SHIFT, 73}, {5, SHIFT, 74}, {54, SHIFT, 75}, {62, SHIFT, 76}, {63, SHIFT, 77}, {67, SHIFT, 78}, {68, SHIFT, 54}, },
			{{-1, ERROR, 200}, {64, SHIFT, 201}, },
			{{-1, ERROR, 201}, {33, SHIFT, 202}, },
			{{-1, ERROR, 202}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 186}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
			{{-1, ERROR, 203}, {34, SHIFT, 204}, },
			{{-1, ERROR, 204}, {33, SHIFT, 205}, },
			{{-1, ERROR, 205}, {27, SHIFT, 29}, {28, SHIFT, 30}, {29, SHIFT, 186}, {35, SHIFT, 32}, {37, SHIFT, 33}, {41, SHIFT, 34}, {42, SHIFT, 35}, {65, SHIFT, 36}, {68, SHIFT, 37}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 9}, },
			{{-1, 10}, {9, 13}, },
			{{-1, 19}, {20, 28}, {59, 28}, },
			{{-1, 70}, },
			{{-1, 25}, {17, 26}, {27, 49}, },
			{{-1, 79}, {21, 38}, {33, 55}, {36, 38}, {46, 38}, {50, 71}, {59, 38}, {60, 38}, {93, 38}, {107, 147}, {183, 38}, {185, 38}, {188, 38}, {195, 38}, {202, 38}, {205, 38}, },
			{{-1, 95}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 39}, },
			{{-1, 80}, {68, 103}, },
			{{-1, 40}, {46, 65}, {60, 65}, {93, 65}, {185, 189}, },
			{{-1, 41}, {183, 187}, {185, 190}, {188, 192}, {195, 197}, {202, 203}, {205, 197}, },
			{{-1, 42}, {195, 198}, },
			{{-1, 43}, },
			{{-1, 44}, },
			{{-1, 72}, },
			{{-1, 108}, {147, 173}, },
			{{-1, 81}, {113, 150}, },
			{{-1, 45}, },
			{{-1, 97}, {63, 101}, {77, 111}, {132, 166}, {133, 167}, {165, 176}, {178, 184}, {199, 200}, },
			{{-1, 98}, },
			{{-1, 82}, {61, 96}, },
			{{-1, 139}, {169, 179}, {170, 180}, },
			{{-1, 117}, {151, 174}, {152, 175}, },
			{{-1, 99}, {137, 169}, {138, 170}, {140, 171}, },
			{{-1, 83}, {114, 151}, {115, 152}, {118, 153}, },
			{{-1, -1}, },
			{{-1, 100}, {51, 84}, {61, 84}, {113, 84}, {114, 84}, {115, 84}, {118, 84}, },
			{{-1, 125}, },
			{{-1, 85}, {119, 154}, {120, 155}, {121, 156}, {122, 157}, {123, 158}, {124, 159}, {126, 160}, {127, 161}, },
			{{-1, 86}, {128, 162}, {129, 163}, {130, 164}, },
			{{-1, -1}, },
			{{-1, 87}, {75, 110}, },
			{{-1, 20}, {36, 59}, },
			{{-1, 46}, {36, 60}, {59, 93}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'This'",
			"expecting: 'is'",
			"expecting: EOF",
			"expecting: 'program'",
			"expecting: identificador",
			"expecting: '.'",
			"expecting: 'It', 'Let', EOF",
			"expecting: 'presents'",
			"expecting: 'us'",
			"expecting: 'Let', EOF",
			"expecting: ':'",
			"expecting: 'begin'",
			"expecting: 'Let', 'alterable', 'unalterable', 'vector', EOF",
			"expecting: 'number', 'answer', 'symbol'",
			"expecting: 'of'",
			"expecting: 'Let', 'alterable', 'unalterable', 'vector', 'capture', 'show', 'just', 'as', 'considering', 'abandon', 'go', '[', ']', identificador, EOF",
			"expecting: 'capture', 'show', 'just', 'as', 'considering', 'abandon', 'go', '[', identificador",
			"expecting: '(', identificador",
			"expecting: '('",
			"expecting: 'in'",
			"expecting: 'long'",
			"expecting: ';'",
			"expecting: 'to'",
			"expecting: 'alterable', 'unalterable', 'vector', 'capture', 'show', 'just', 'as', 'considering', 'abandon', 'go', '[', ']', identificador",
			"expecting: '=', ':=', '('",
			"expecting: ':='",
			"expecting: '='",
			"expecting: 'That', 'capture', 'show', 'just', 'as', 'considering', 'abandon', 'go', '[', ']', identificador",
			"expecting: 'That', 'capture', 'show', 'just', 'otherwise', 'as', 'considering', 'abandon', 'go', '[', ']', identificador",
			"expecting: 'That', 'capture', 'show', 'just', 'as', 'considering', 'abandon', 'go', '[', identificador",
			"expecting: ';', '='",
			"expecting: simbolo, valor booleano, '-', literal, '(', numero, identificador",
			"expecting: 'case'",
			"expecting: 'as'",
			"expecting: ',', ';', 'do', 'from', 'by', '==', '!=', '>=', '<=', '>', '<', '+', '-', '*', '/', '//', 'and', 'or', 'xor', '(', ')'",
			"expecting: 'from'",
			"expecting: 'next'",
			"expecting: 'capture', 'show', 'just', 'as', 'considering', 'abandon', 'go', '[', ']', identificador",
			"expecting: 'would'",
			"expecting: simbolo, valor booleano, literal, numero",
			"expecting: vector matrix, numero",
			"expecting: ',', ')'",
			"expecting: ')'",
			"expecting: ',', ';', 'do', 'by', '==', '!=', '>=', '<=', '>', '<', '+', '-', '*', '/', '//', 'and', 'or', 'xor', ')'",
			"expecting: ',', ';', 'do', 'from', 'by', ':=', '==', '!=', '>=', '<=', '>', '<', '+', '-', '*', '/', '//', 'and', 'or', 'xor', ')'",
			"expecting: ',', 'or', 'xor', ')'",
			"expecting: ',', 'and', 'or', 'xor', ')'",
			"expecting: ',', ';', 'do', 'by', '==', '!=', '>=', '<=', '>', '<', 'and', 'or', 'xor', ')'",
			"expecting: ',', ';', 'do', 'by', '==', '!=', '>=', '<=', '>', '<', '+', '-', 'and', 'or', 'xor', ')'",
			"expecting: 'that'",
			"expecting: 'iteration'",
			"expecting: ';', 'do', 'by', ')'",
			"expecting: ';', 'do', 'by', 'or', 'xor', ')'",
			"expecting: ';', 'do', 'by', 'and', 'or', 'xor', ')'",
			"expecting: 'be'",
			"expecting: ',', ';', 'do', 'by', 'and', 'or', 'xor', ')'",
			"expecting: 'all'",
			"expecting: 'by'",
			"expecting: 'do'",
			"expecting: 'otherwise'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 10, 11, 2, 12, 10, 13, 13, 14, 15, 12, 16, 17, 17, 17, 4, 4, 13, 15, 18, 18, 19, 20, 4, 21, 22, 23, 24, 25, 26, 27, 27, 27, 28, 28, 28, 29, 21, 30, 18, 4, 31, 32, 33, 34, 35, 28, 36, 28, 23, 37, 31, 31, 31, 38, 27, 15, 15, 39, 40, 4, 41, 42, 43, 43, 31, 43, 31, 43, 43, 43, 21, 44, 45, 46, 47, 48, 43, 49, 18, 22, 50, 28, 37, 28, 44, 44, 21, 51, 52, 53, 21, 54, 21, 42, 42, 21, 4, 42, 21, 43, 42, 28, 31, 31, 31, 44, 44, 31, 31, 31, 31, 31, 31, 31, 55, 31, 31, 31, 31, 31, 18, 31, 31, 21, 28, 28, 31, 31, 51, 31, 28, 56, 15, 4, 4, 15, 41, 28, 43, 44, 45, 45, 45, 55, 55, 55, 55, 55, 55, 47, 47, 48, 48, 48, 31, 42, 57, 28, 52, 52, 52, 5, 42, 44, 44, 42, 58, 31, 51, 51, 2, 58, 16, 58, 16, 19, 28, 16, 27, 28, 32, 28, 58, 49, 16, 18, 28, 27, 31, 42, 58, 16, 59, 58, 16, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
