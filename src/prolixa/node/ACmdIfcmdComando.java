/* This file was generated by SableCC (http://www.sablecc.org/). */

package prolixa.node;

import prolixa.analysis.*;

@SuppressWarnings("nls")
public final class ACmdIfcmdComando extends PComando
{
    private PIfCmd _ifCmd_;

    public ACmdIfcmdComando()
    {
        // Constructor
    }

    public ACmdIfcmdComando(
        @SuppressWarnings("hiding") PIfCmd _ifCmd_)
    {
        // Constructor
        setIfCmd(_ifCmd_);

    }

    @Override
    public Object clone()
    {
        return new ACmdIfcmdComando(
            cloneNode(this._ifCmd_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACmdIfcmdComando(this);
    }

    public PIfCmd getIfCmd()
    {
        return this._ifCmd_;
    }

    public void setIfCmd(PIfCmd node)
    {
        if(this._ifCmd_ != null)
        {
            this._ifCmd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ifCmd_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ifCmd_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ifCmd_ == child)
        {
            this._ifCmd_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ifCmd_ == oldChild)
        {
            setIfCmd((PIfCmd) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
