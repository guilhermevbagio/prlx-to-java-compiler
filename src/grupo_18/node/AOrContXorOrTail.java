/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AOrContXorOrTail extends POrTail
{
    private TXor _xor_;
    private PAndExp _andExp_;
    private POrTail _orTail_;

    public AOrContXorOrTail()
    {
        // Constructor
    }

    public AOrContXorOrTail(
        @SuppressWarnings("hiding") TXor _xor_,
        @SuppressWarnings("hiding") PAndExp _andExp_,
        @SuppressWarnings("hiding") POrTail _orTail_)
    {
        // Constructor
        setXor(_xor_);

        setAndExp(_andExp_);

        setOrTail(_orTail_);

    }

    @Override
    public Object clone()
    {
        return new AOrContXorOrTail(
            cloneNode(this._xor_),
            cloneNode(this._andExp_),
            cloneNode(this._orTail_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOrContXorOrTail(this);
    }

    public TXor getXor()
    {
        return this._xor_;
    }

    public void setXor(TXor node)
    {
        if(this._xor_ != null)
        {
            this._xor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xor_ = node;
    }

    public PAndExp getAndExp()
    {
        return this._andExp_;
    }

    public void setAndExp(PAndExp node)
    {
        if(this._andExp_ != null)
        {
            this._andExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._andExp_ = node;
    }

    public POrTail getOrTail()
    {
        return this._orTail_;
    }

    public void setOrTail(POrTail node)
    {
        if(this._orTail_ != null)
        {
            this._orTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._orTail_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._xor_)
            + toString(this._andExp_)
            + toString(this._orTail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._xor_ == child)
        {
            this._xor_ = null;
            return;
        }

        if(this._andExp_ == child)
        {
            this._andExp_ = null;
            return;
        }

        if(this._orTail_ == child)
        {
            this._orTail_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._xor_ == oldChild)
        {
            setXor((TXor) newChild);
            return;
        }

        if(this._andExp_ == oldChild)
        {
            setAndExp((PAndExp) newChild);
            return;
        }

        if(this._orTail_ == oldChild)
        {
            setOrTail((POrTail) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
