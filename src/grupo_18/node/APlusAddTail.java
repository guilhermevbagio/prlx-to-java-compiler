/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class APlusAddTail extends PAddTail
{
    private TSoma _soma_;
    private PMulExp _mulExp_;
    private PAddTail _addTail_;

    public APlusAddTail()
    {
        // Constructor
    }

    public APlusAddTail(
        @SuppressWarnings("hiding") TSoma _soma_,
        @SuppressWarnings("hiding") PMulExp _mulExp_,
        @SuppressWarnings("hiding") PAddTail _addTail_)
    {
        // Constructor
        setSoma(_soma_);

        setMulExp(_mulExp_);

        setAddTail(_addTail_);

    }

    @Override
    public Object clone()
    {
        return new APlusAddTail(
            cloneNode(this._soma_),
            cloneNode(this._mulExp_),
            cloneNode(this._addTail_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusAddTail(this);
    }

    public TSoma getSoma()
    {
        return this._soma_;
    }

    public void setSoma(TSoma node)
    {
        if(this._soma_ != null)
        {
            this._soma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._soma_ = node;
    }

    public PMulExp getMulExp()
    {
        return this._mulExp_;
    }

    public void setMulExp(PMulExp node)
    {
        if(this._mulExp_ != null)
        {
            this._mulExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mulExp_ = node;
    }

    public PAddTail getAddTail()
    {
        return this._addTail_;
    }

    public void setAddTail(PAddTail node)
    {
        if(this._addTail_ != null)
        {
            this._addTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._addTail_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._soma_)
            + toString(this._mulExp_)
            + toString(this._addTail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._soma_ == child)
        {
            this._soma_ = null;
            return;
        }

        if(this._mulExp_ == child)
        {
            this._mulExp_ = null;
            return;
        }

        if(this._addTail_ == child)
        {
            this._addTail_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._soma_ == oldChild)
        {
            setSoma((TSoma) newChild);
            return;
        }

        if(this._mulExp_ == oldChild)
        {
            setMulExp((PMulExp) newChild);
            return;
        }

        if(this._addTail_ == oldChild)
        {
            setAddTail((PAddTail) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
