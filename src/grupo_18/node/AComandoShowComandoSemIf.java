/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AComandoShowComandoSemIf extends PComandoSemIf
{
    private TShow _show_;
    private TParEsq _parEsq_;
    private PListaExpRparen _listaExpRparen_;
    private TPontoEVirgula _pontoEVirgula_;

    public AComandoShowComandoSemIf()
    {
        // Constructor
    }

    public AComandoShowComandoSemIf(
        @SuppressWarnings("hiding") TShow _show_,
        @SuppressWarnings("hiding") TParEsq _parEsq_,
        @SuppressWarnings("hiding") PListaExpRparen _listaExpRparen_,
        @SuppressWarnings("hiding") TPontoEVirgula _pontoEVirgula_)
    {
        // Constructor
        setShow(_show_);

        setParEsq(_parEsq_);

        setListaExpRparen(_listaExpRparen_);

        setPontoEVirgula(_pontoEVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AComandoShowComandoSemIf(
            cloneNode(this._show_),
            cloneNode(this._parEsq_),
            cloneNode(this._listaExpRparen_),
            cloneNode(this._pontoEVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoShowComandoSemIf(this);
    }

    public TShow getShow()
    {
        return this._show_;
    }

    public void setShow(TShow node)
    {
        if(this._show_ != null)
        {
            this._show_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._show_ = node;
    }

    public TParEsq getParEsq()
    {
        return this._parEsq_;
    }

    public void setParEsq(TParEsq node)
    {
        if(this._parEsq_ != null)
        {
            this._parEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parEsq_ = node;
    }

    public PListaExpRparen getListaExpRparen()
    {
        return this._listaExpRparen_;
    }

    public void setListaExpRparen(PListaExpRparen node)
    {
        if(this._listaExpRparen_ != null)
        {
            this._listaExpRparen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaExpRparen_ = node;
    }

    public TPontoEVirgula getPontoEVirgula()
    {
        return this._pontoEVirgula_;
    }

    public void setPontoEVirgula(TPontoEVirgula node)
    {
        if(this._pontoEVirgula_ != null)
        {
            this._pontoEVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._show_)
            + toString(this._parEsq_)
            + toString(this._listaExpRparen_)
            + toString(this._pontoEVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._show_ == child)
        {
            this._show_ = null;
            return;
        }

        if(this._parEsq_ == child)
        {
            this._parEsq_ = null;
            return;
        }

        if(this._listaExpRparen_ == child)
        {
            this._listaExpRparen_ = null;
            return;
        }

        if(this._pontoEVirgula_ == child)
        {
            this._pontoEVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._show_ == oldChild)
        {
            setShow((TShow) newChild);
            return;
        }

        if(this._parEsq_ == oldChild)
        {
            setParEsq((TParEsq) newChild);
            return;
        }

        if(this._listaExpRparen_ == oldChild)
        {
            setListaExpRparen((PListaExpRparen) newChild);
            return;
        }

        if(this._pontoEVirgula_ == oldChild)
        {
            setPontoEVirgula((TPontoEVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
