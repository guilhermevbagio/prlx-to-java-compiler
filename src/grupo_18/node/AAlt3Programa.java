/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AAlt3Programa extends PPrograma
{
    private TThis _this_;
    private TIs _is_;
    private TProgram _program_;
    private TIdentificador _identificador_;
    private TPonto _ponto_;
    private PComandos _comandos_;

    public AAlt3Programa()
    {
        // Constructor
    }

    public AAlt3Programa(
        @SuppressWarnings("hiding") TThis _this_,
        @SuppressWarnings("hiding") TIs _is_,
        @SuppressWarnings("hiding") TProgram _program_,
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TPonto _ponto_,
        @SuppressWarnings("hiding") PComandos _comandos_)
    {
        // Constructor
        setThis(_this_);

        setIs(_is_);

        setProgram(_program_);

        setIdentificador(_identificador_);

        setPonto(_ponto_);

        setComandos(_comandos_);

    }

    @Override
    public Object clone()
    {
        return new AAlt3Programa(
            cloneNode(this._this_),
            cloneNode(this._is_),
            cloneNode(this._program_),
            cloneNode(this._identificador_),
            cloneNode(this._ponto_),
            cloneNode(this._comandos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAlt3Programa(this);
    }

    public TThis getThis()
    {
        return this._this_;
    }

    public void setThis(TThis node)
    {
        if(this._this_ != null)
        {
            this._this_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._this_ = node;
    }

    public TIs getIs()
    {
        return this._is_;
    }

    public void setIs(TIs node)
    {
        if(this._is_ != null)
        {
            this._is_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._is_ = node;
    }

    public TProgram getProgram()
    {
        return this._program_;
    }

    public void setProgram(TProgram node)
    {
        if(this._program_ != null)
        {
            this._program_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._program_ = node;
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TPonto getPonto()
    {
        return this._ponto_;
    }

    public void setPonto(TPonto node)
    {
        if(this._ponto_ != null)
        {
            this._ponto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ponto_ = node;
    }

    public PComandos getComandos()
    {
        return this._comandos_;
    }

    public void setComandos(PComandos node)
    {
        if(this._comandos_ != null)
        {
            this._comandos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comandos_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._this_)
            + toString(this._is_)
            + toString(this._program_)
            + toString(this._identificador_)
            + toString(this._ponto_)
            + toString(this._comandos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._this_ == child)
        {
            this._this_ = null;
            return;
        }

        if(this._is_ == child)
        {
            this._is_ = null;
            return;
        }

        if(this._program_ == child)
        {
            this._program_ = null;
            return;
        }

        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._ponto_ == child)
        {
            this._ponto_ = null;
            return;
        }

        if(this._comandos_ == child)
        {
            this._comandos_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._this_ == oldChild)
        {
            setThis((TThis) newChild);
            return;
        }

        if(this._is_ == oldChild)
        {
            setIs((TIs) newChild);
            return;
        }

        if(this._program_ == oldChild)
        {
            setProgram((TProgram) newChild);
            return;
        }

        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._ponto_ == oldChild)
        {
            setPonto((TPonto) newChild);
            return;
        }

        if(this._comandos_ == oldChild)
        {
            setComandos((PComandos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
