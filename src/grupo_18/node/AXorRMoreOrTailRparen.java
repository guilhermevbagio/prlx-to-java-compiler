/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AXorRMoreOrTailRparen extends POrTailRparen
{
    private TXor _xor_;
    private PAndExpRparen _andExpRparen_;
    private POrTailRparen _orTailRparen_;

    public AXorRMoreOrTailRparen()
    {
        // Constructor
    }

    public AXorRMoreOrTailRparen(
        @SuppressWarnings("hiding") TXor _xor_,
        @SuppressWarnings("hiding") PAndExpRparen _andExpRparen_,
        @SuppressWarnings("hiding") POrTailRparen _orTailRparen_)
    {
        // Constructor
        setXor(_xor_);

        setAndExpRparen(_andExpRparen_);

        setOrTailRparen(_orTailRparen_);

    }

    @Override
    public Object clone()
    {
        return new AXorRMoreOrTailRparen(
            cloneNode(this._xor_),
            cloneNode(this._andExpRparen_),
            cloneNode(this._orTailRparen_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAXorRMoreOrTailRparen(this);
    }

    public TXor getXor()
    {
        return this._xor_;
    }

    public void setXor(TXor node)
    {
        if(this._xor_ != null)
        {
            this._xor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xor_ = node;
    }

    public PAndExpRparen getAndExpRparen()
    {
        return this._andExpRparen_;
    }

    public void setAndExpRparen(PAndExpRparen node)
    {
        if(this._andExpRparen_ != null)
        {
            this._andExpRparen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._andExpRparen_ = node;
    }

    public POrTailRparen getOrTailRparen()
    {
        return this._orTailRparen_;
    }

    public void setOrTailRparen(POrTailRparen node)
    {
        if(this._orTailRparen_ != null)
        {
            this._orTailRparen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._orTailRparen_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._xor_)
            + toString(this._andExpRparen_)
            + toString(this._orTailRparen_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._xor_ == child)
        {
            this._xor_ = null;
            return;
        }

        if(this._andExpRparen_ == child)
        {
            this._andExpRparen_ = null;
            return;
        }

        if(this._orTailRparen_ == child)
        {
            this._orTailRparen_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._xor_ == oldChild)
        {
            setXor((TXor) newChild);
            return;
        }

        if(this._andExpRparen_ == oldChild)
        {
            setAndExpRparen((PAndExpRparen) newChild);
            return;
        }

        if(this._orTailRparen_ == oldChild)
        {
            setOrTailRparen((POrTailRparen) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
