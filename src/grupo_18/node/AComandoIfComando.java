/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AComandoIfComando extends PComando
{
    private PIfThen _ifThen_;

    public AComandoIfComando()
    {
        // Constructor
    }

    public AComandoIfComando(
        @SuppressWarnings("hiding") PIfThen _ifThen_)
    {
        // Constructor
        setIfThen(_ifThen_);

    }

    @Override
    public Object clone()
    {
        return new AComandoIfComando(
            cloneNode(this._ifThen_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoIfComando(this);
    }

    public PIfThen getIfThen()
    {
        return this._ifThen_;
    }

    public void setIfThen(PIfThen node)
    {
        if(this._ifThen_ != null)
        {
            this._ifThen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ifThen_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ifThen_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ifThen_ == child)
        {
            this._ifThen_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ifThen_ == oldChild)
        {
            setIfThen((PIfThen) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
