/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AComandoCaptureComando extends PComando
{
    private TCapture _capture_;
    private TParEsq _parEsq_;
    private PListaVar _listaVar_;
    private TParDir _parDir_;
    private TPontoEVirgula _pontoEVirgula_;

    public AComandoCaptureComando()
    {
        // Constructor
    }

    public AComandoCaptureComando(
        @SuppressWarnings("hiding") TCapture _capture_,
        @SuppressWarnings("hiding") TParEsq _parEsq_,
        @SuppressWarnings("hiding") PListaVar _listaVar_,
        @SuppressWarnings("hiding") TParDir _parDir_,
        @SuppressWarnings("hiding") TPontoEVirgula _pontoEVirgula_)
    {
        // Constructor
        setCapture(_capture_);

        setParEsq(_parEsq_);

        setListaVar(_listaVar_);

        setParDir(_parDir_);

        setPontoEVirgula(_pontoEVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AComandoCaptureComando(
            cloneNode(this._capture_),
            cloneNode(this._parEsq_),
            cloneNode(this._listaVar_),
            cloneNode(this._parDir_),
            cloneNode(this._pontoEVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComandoCaptureComando(this);
    }

    public TCapture getCapture()
    {
        return this._capture_;
    }

    public void setCapture(TCapture node)
    {
        if(this._capture_ != null)
        {
            this._capture_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._capture_ = node;
    }

    public TParEsq getParEsq()
    {
        return this._parEsq_;
    }

    public void setParEsq(TParEsq node)
    {
        if(this._parEsq_ != null)
        {
            this._parEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parEsq_ = node;
    }

    public PListaVar getListaVar()
    {
        return this._listaVar_;
    }

    public void setListaVar(PListaVar node)
    {
        if(this._listaVar_ != null)
        {
            this._listaVar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaVar_ = node;
    }

    public TParDir getParDir()
    {
        return this._parDir_;
    }

    public void setParDir(TParDir node)
    {
        if(this._parDir_ != null)
        {
            this._parDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parDir_ = node;
    }

    public TPontoEVirgula getPontoEVirgula()
    {
        return this._pontoEVirgula_;
    }

    public void setPontoEVirgula(TPontoEVirgula node)
    {
        if(this._pontoEVirgula_ != null)
        {
            this._pontoEVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._capture_)
            + toString(this._parEsq_)
            + toString(this._listaVar_)
            + toString(this._parDir_)
            + toString(this._pontoEVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._capture_ == child)
        {
            this._capture_ = null;
            return;
        }

        if(this._parEsq_ == child)
        {
            this._parEsq_ = null;
            return;
        }

        if(this._listaVar_ == child)
        {
            this._listaVar_ = null;
            return;
        }

        if(this._parDir_ == child)
        {
            this._parDir_ = null;
            return;
        }

        if(this._pontoEVirgula_ == child)
        {
            this._pontoEVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._capture_ == oldChild)
        {
            setCapture((TCapture) newChild);
            return;
        }

        if(this._parEsq_ == oldChild)
        {
            setParEsq((TParEsq) newChild);
            return;
        }

        if(this._listaVar_ == oldChild)
        {
            setListaVar((PListaVar) newChild);
            return;
        }

        if(this._parDir_ == oldChild)
        {
            setParDir((TParDir) newChild);
            return;
        }

        if(this._pontoEVirgula_ == oldChild)
        {
            setPontoEVirgula((TPontoEVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
