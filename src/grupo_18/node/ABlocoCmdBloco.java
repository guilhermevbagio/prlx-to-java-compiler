/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class ABlocoCmdBloco extends PBloco
{
    private TColcheteEsq _colcheteEsq_;
    private PDeclsOpt _declsOpt_;
    private PListaComando _listaComando_;
    private TColcheteDir _colcheteDir_;

    public ABlocoCmdBloco()
    {
        // Constructor
    }

    public ABlocoCmdBloco(
        @SuppressWarnings("hiding") TColcheteEsq _colcheteEsq_,
        @SuppressWarnings("hiding") PDeclsOpt _declsOpt_,
        @SuppressWarnings("hiding") PListaComando _listaComando_,
        @SuppressWarnings("hiding") TColcheteDir _colcheteDir_)
    {
        // Constructor
        setColcheteEsq(_colcheteEsq_);

        setDeclsOpt(_declsOpt_);

        setListaComando(_listaComando_);

        setColcheteDir(_colcheteDir_);

    }

    @Override
    public Object clone()
    {
        return new ABlocoCmdBloco(
            cloneNode(this._colcheteEsq_),
            cloneNode(this._declsOpt_),
            cloneNode(this._listaComando_),
            cloneNode(this._colcheteDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABlocoCmdBloco(this);
    }

    public TColcheteEsq getColcheteEsq()
    {
        return this._colcheteEsq_;
    }

    public void setColcheteEsq(TColcheteEsq node)
    {
        if(this._colcheteEsq_ != null)
        {
            this._colcheteEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colcheteEsq_ = node;
    }

    public PDeclsOpt getDeclsOpt()
    {
        return this._declsOpt_;
    }

    public void setDeclsOpt(PDeclsOpt node)
    {
        if(this._declsOpt_ != null)
        {
            this._declsOpt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declsOpt_ = node;
    }

    public PListaComando getListaComando()
    {
        return this._listaComando_;
    }

    public void setListaComando(PListaComando node)
    {
        if(this._listaComando_ != null)
        {
            this._listaComando_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._listaComando_ = node;
    }

    public TColcheteDir getColcheteDir()
    {
        return this._colcheteDir_;
    }

    public void setColcheteDir(TColcheteDir node)
    {
        if(this._colcheteDir_ != null)
        {
            this._colcheteDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colcheteDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._colcheteEsq_)
            + toString(this._declsOpt_)
            + toString(this._listaComando_)
            + toString(this._colcheteDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._colcheteEsq_ == child)
        {
            this._colcheteEsq_ = null;
            return;
        }

        if(this._declsOpt_ == child)
        {
            this._declsOpt_ = null;
            return;
        }

        if(this._listaComando_ == child)
        {
            this._listaComando_ = null;
            return;
        }

        if(this._colcheteDir_ == child)
        {
            this._colcheteDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._colcheteEsq_ == oldChild)
        {
            setColcheteEsq((TColcheteEsq) newChild);
            return;
        }

        if(this._declsOpt_ == oldChild)
        {
            setDeclsOpt((PDeclsOpt) newChild);
            return;
        }

        if(this._listaComando_ == oldChild)
        {
            setListaComando((PListaComando) newChild);
            return;
        }

        if(this._colcheteDir_ == oldChild)
        {
            setColcheteDir((TColcheteDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
