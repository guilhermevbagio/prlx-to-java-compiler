/* This file was generated by SableCC (http://www.sablecc.org/). */

package grupo_18.node;

import grupo_18.analysis.*;

@SuppressWarnings("nls")
public final class AAndContAndTail extends PAndTail
{
    private TAnd _and_;
    private PRelExp _relExp_;
    private PAndTail _andTail_;

    public AAndContAndTail()
    {
        // Constructor
    }

    public AAndContAndTail(
        @SuppressWarnings("hiding") TAnd _and_,
        @SuppressWarnings("hiding") PRelExp _relExp_,
        @SuppressWarnings("hiding") PAndTail _andTail_)
    {
        // Constructor
        setAnd(_and_);

        setRelExp(_relExp_);

        setAndTail(_andTail_);

    }

    @Override
    public Object clone()
    {
        return new AAndContAndTail(
            cloneNode(this._and_),
            cloneNode(this._relExp_),
            cloneNode(this._andTail_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAndContAndTail(this);
    }

    public TAnd getAnd()
    {
        return this._and_;
    }

    public void setAnd(TAnd node)
    {
        if(this._and_ != null)
        {
            this._and_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._and_ = node;
    }

    public PRelExp getRelExp()
    {
        return this._relExp_;
    }

    public void setRelExp(PRelExp node)
    {
        if(this._relExp_ != null)
        {
            this._relExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._relExp_ = node;
    }

    public PAndTail getAndTail()
    {
        return this._andTail_;
    }

    public void setAndTail(PAndTail node)
    {
        if(this._andTail_ != null)
        {
            this._andTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._andTail_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._and_)
            + toString(this._relExp_)
            + toString(this._andTail_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._and_ == child)
        {
            this._and_ = null;
            return;
        }

        if(this._relExp_ == child)
        {
            this._relExp_ = null;
            return;
        }

        if(this._andTail_ == child)
        {
            this._andTail_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._and_ == oldChild)
        {
            setAnd((TAnd) newChild);
            return;
        }

        if(this._relExp_ == oldChild)
        {
            setRelExp((PRelExp) newChild);
            return;
        }

        if(this._andTail_ == oldChild)
        {
            setAndTail((PAndTail) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
